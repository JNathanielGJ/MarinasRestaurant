package Formulario;

import javax.swing.JOptionPane;
import Conexion.Conexion;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import java.sql.ResultSet;

public class Proveedores extends javax.swing.JFrame {
    Conexion conexionPostgres = new Conexion();
    Connection con;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Proveedores.class.getName());

    /**
     * Creates new form Proveedores
     */
    public Proveedores() {
        initComponents();
        try{
            con = conexionPostgres.getConexion();
        }catch (SQLException e){
                   e.getMessage();
      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LBLidProveedor = new javax.swing.JLabel();
        LBLnombreProveedor = new javax.swing.JLabel();
        LBLnit = new javax.swing.JLabel();
        LBLnombreContacto = new javax.swing.JLabel();
        LBLdireccion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdProveedor = new javax.swing.JTextField();
        txtNombreProveedor = new javax.swing.JTextField();
        txtNit = new javax.swing.JTextField();
        txtNombreContacto = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefonoProveedor = new javax.swing.JTextField();
        txtTelefonoContacto = new javax.swing.JTextField();
        BTNingresar = new javax.swing.JButton();
        BTNactualizar = new javax.swing.JButton();
        BTNeliminar = new javax.swing.JButton();
        BTNconsultar = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LBLidProveedor.setText("iD");

        LBLnombreProveedor.setText("Nombre Proveedor");

        LBLnit.setText("NIT");

        LBLnombreContacto.setText("Nombre de contacto");

        LBLdireccion.setText("Direccion");

        jLabel1.setText("Telefono Proveedor");

        jLabel2.setText("Telefono de contacto");

        txtIdProveedor.setText(" ");

        txtNombreProveedor.setText(" ");

        txtNit.setText(" ");

        txtNombreContacto.setText(" ");

        txtDireccion.setText(" ");

        txtTelefonoProveedor.setText(" ");

        txtTelefonoContacto.setText(" ");

        BTNingresar.setText("Ingresar");
        BTNingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNingresarActionPerformed(evt);
            }
        });

        BTNactualizar.setText("Actualizar");
        BTNactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNactualizarActionPerformed(evt);
            }
        });

        BTNeliminar.setText("Insertar");
        BTNeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNeliminarActionPerformed(evt);
            }
        });

        BTNconsultar.setText("Consultar");
        BTNconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNconsultarActionPerformed(evt);
            }
        });

        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefonoContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefonoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBLidProveedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BTNingresar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BTNactualizar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BTNeliminar))
                                    .addComponent(Cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BTNconsultar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBLnombreContacto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombreContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LBLdireccion)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBLnombreProveedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LBLnit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLidProveedor)
                    .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLnombreProveedor)
                    .addComponent(txtNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LBLnit)
                        .addGap(40, 40, 40)
                        .addComponent(LBLdireccion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LBLnombreContacto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefonoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefonoContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTNingresar)
                    .addComponent(BTNactualizar)
                    .addComponent(BTNeliminar)
                    .addComponent(BTNconsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTNactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNactualizarActionPerformed
        // TODO add your handling code here:
    try {
        String idproveedor = txtIdProveedor.getText();
        String nombre = txtNombreProveedor.getText();
        String nit = txtNit.getText();
        String nombrecontacto = txtNombreContacto.getText();
        String direccion = txtDireccion.getText();
        String telefonoproveedor = txtTelefonoProveedor.getText();
        String telefonocontacto = txtTelefonoContacto.getText();
        int id = Integer.parseInt(idproveedor.trim());

        String qry = "UPDATE marinasrestaurant.proveedores SET nombre_proveedor=?, nit=?, nombre_contacto=?, direccion=?, telefono_empresa=?, telefono_contacto=? WHERE proveedor_id = ?";

        PreparedStatement ps = con.prepareStatement(qry);
        ps.setString(1, nombre);
        ps.setString(2, nit);
        ps.setString(3, nombrecontacto);
        ps.setString(4, direccion);
        ps.setString(5, telefonoproveedor);
        ps.setString(6, telefonocontacto);
        ps.setInt(7, id);
        
        int filasActualizadas = ps.executeUpdate();

        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Registro actualizado correctamente");
            } else {
            JOptionPane.showMessageDialog(null, "No se encontró un proveedor con id " + id);
            }

        ps.close();

        }catch (SQLException e){
                   e.getMessage();
        }
    }//GEN-LAST:event_BTNactualizarActionPerformed

    private void BTNingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNingresarActionPerformed
        // TODO add your handling code here:
        try{
            String nombre = txtNombreProveedor.getText();
            String nit = txtNit.getText();
            String nombrecontacto = txtNombreContacto.getText();
            String direccion = txtDireccion.getText();
            String telefonoproveedor = txtTelefonoProveedor.getText();
            String telefonocontacto = txtTelefonoContacto.getText();

            String qry = "INSERT INTO marinasrestaurant.proveedores(nombre_proveedor, nit, nombre_contacto, direccion, telefono_empresa, telefono_contacto)"
                    +" values(?, ? ,?, ?, ?, ?)";

            PreparedStatement ps = con.prepareStatement(qry);
            ps.setString(1, nombre);
            ps.setString(2, nit);
            ps.setString(3, nombrecontacto);
            ps.setString(4, direccion);
            ps.setString(5, telefonoproveedor);
            ps.setString(6, telefonocontacto);

            int filasInsertadas = ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Total de registros insertados"+filasInsertadas);
            ps.close();

        }catch (SQLException e){
                   e.getMessage();
        }        
    }//GEN-LAST:event_BTNingresarActionPerformed

    private void BTNeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNeliminarActionPerformed
        // TODO add your handling code here:
    try{    
        String nombre = txtNombreProveedor.getText().trim();
        
        String qry = "DELETE FROM marinasrestaurant.proveedores WHERE LOWER(nombre_proveedor) ILIKE LOWER(?)";

        PreparedStatement ps = con.prepareStatement(qry);
        ps.setString(1, "%" + nombre + "%");

        int filasActualizadas = ps.executeUpdate();

        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Registro actualizado correctamente");
            } else {
            JOptionPane.showMessageDialog(null, "No se encontró el proveedor " + nombre);
            }
        
        ps.close();

        }catch (SQLException e){
                   e.getMessage();
        }        
    }//GEN-LAST:event_BTNeliminarActionPerformed

    private void BTNconsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNconsultarActionPerformed
        // TODO add your handling code here:
        try {
            String nombre = txtNombreProveedor.getText().trim();
            
            String qry = "SELECT * FROM marinasrestaurant.proveedores WHERE LOWER(nombre_proveedor) ILIKE LOWER(?)";

            try (PreparedStatement ps = con.prepareStatement(qry)) {
                ps.setString(1, "%" + nombre + "%");
                
                try (ResultSet rs = ps.executeQuery()) {
                    if (rs.next()) {
                        String nit = rs.getString("nit");
                        String nombrecontacto = rs.getString("nombre_contacto");
                        String direccion = rs.getString("direccion");
                        String telefonoproveedor = rs.getString("telefono_empresa");
                        String telefonocontacto = rs.getString("telefono_contacto");
                        String id = rs.getString("proveedor_id");
                        txtNit.setText(nit);
                        txtNombreContacto.setText(nombrecontacto);
                        txtDireccion.setText(direccion);
                        txtTelefonoProveedor.setText(telefonoproveedor);
                        txtTelefonoContacto.setText(telefonocontacto);
                        txtIdProveedor.setText(id);
                        
            
            JOptionPane.showMessageDialog(this, "Registro encontrado");
            JOptionPane.showMessageDialog(this, nombre);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró el proveedor " + nombre);
                }
            }
        }

        } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_BTNconsultarActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Proveedores().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNactualizar;
    private javax.swing.JButton BTNconsultar;
    private javax.swing.JButton BTNeliminar;
    private javax.swing.JButton BTNingresar;
    private javax.swing.JButton Cerrar;
    private javax.swing.JLabel LBLdireccion;
    private javax.swing.JLabel LBLidProveedor;
    private javax.swing.JLabel LBLnit;
    private javax.swing.JLabel LBLnombreContacto;
    private javax.swing.JLabel LBLnombreProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdProveedor;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombreContacto;
    private javax.swing.JTextField txtNombreProveedor;
    private javax.swing.JTextField txtTelefonoContacto;
    private javax.swing.JTextField txtTelefonoProveedor;
    // End of variables declaration//GEN-END:variables
}
